#
# Copyright (c) 2016 - 2024 Itspire.
# This software is licensed under the BSD-3-Clause license. (see LICENSE.md for full license)
# All Right Reserved.
#
variables:
    PHP_IMAGE: $CI_REGISTRY/devops/docker-webservers/php-fpm-dev:5.0.1
    COMPOSER_IMAGE: $CI_REGISTRY/itspire-devops/webservers/composer-ci:4.0.0

default:
    cache:
        key: $CI_COMMIT_REF_NAME
        paths:
            - build
            - vendor
    tags:
        - docker-build

stages:
    - prepare
    - deps
    - analyse
    - test
    - artifacts

prepare:
    stage: prepare
    script:
        - mkdir -p build/coverage build/logs
        - rm -rf build/logs/*
        - rm -rf build/coverage/*

deps:
    stage: deps
    before_script:
        - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    script:
        - >
            docker run \
                --rm \
                -v $(pwd):/project \
                -w /project \
                -e DEV_UID=$(id -u) \
                -e DEV_GID=$(id -g) \
                $COMPOSER_IMAGE install --prefer-dist
    after_script:
        - docker logout $CI_REGISTRY

phplint:
    stage: analyse
    before_script:
        - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    script:
        - >
            docker run \
                --rm \
                -v $(pwd):/project \
                -w /project \
                -e DEV_UID=$(id -u) \
                -e DEV_GID=$(id -g) \
                $PHP_IMAGE -l src/main/php src/test/php
    after_script:
        - docker logout $CI_REGISTRY

phpcs:
    stage: analyse
    before_script:
        - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    script:
        - >
            docker run \
                --rm \
                -v $(pwd):/project \
                -w /project \
                -e DEV_UID=$(id -u) \
                -e DEV_GID=$(id -g) \
                $PHP_IMAGE vendor/bin/phpcs \
                    --report=full \
                    --standard=PSR12 \
                    --extensions=php \
                    --ignore=bootstrap.php \
                    src/main/php src/test/php
    after_script:
        - docker logout $CI_REGISTRY

test:
    stage: test
    before_script:
        - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    script:
        - >
            docker run \
                --rm \
                -v $(pwd):/project \
                -w /project \
                -e DEV_UID=$(id -u) \
                -e DEV_GID=$(id -g) \
            $PHP_IMAGE vendor/bin/phpunit --configuration /project/phpunit.xml
    after_script:
        - docker logout $CI_REGISTRY

artifacts:
    stage: artifacts
    script:
        - echo "Generating Artifact..."
    artifacts:
        paths:
            - build
